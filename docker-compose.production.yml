version: "3.8"

services:
  # ChromaDB 벡터 데이터베이스 서비스 (프로덕션용)
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb-server-prod
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    volumes:
      # 🔒 호스트 경로에 직접 바인딩 (더 안전함)
      - ./data/chroma:/data
      # 백업용 추가 볼륨
      - ./backups/chroma:/backups
    restart: unless-stopped
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # FastMCP 서버 (ChromaDB 클라이언트) - 프로덕션용
  fastmcp-server:
    build: .
    container_name: fastmcp-prompt-enhancement-prod
    ports:
      - "8000:8000"
    environment:
      # 🔐 OpenAI API 설정
      - OPENAI_API_KEY=${OPENAI_API_KEY}

      # 📊 ChromaDB 연결 설정
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CHROMA_DB_PATH=/data

      # 📝 로깅 설정
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_DIR=/app/logs

      # 🚀 MCP 설정
      - MCP_SERVER_NAME=FastMCP Prompt Enhancement Server
      - MCP_VERSION=2.0.0

      # 🧠 AI 설정
      - MAX_CONTEXT_LENGTH=${MAX_CONTEXT_LENGTH:-5}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.7}

      # 📈 분석 설정
      - ENABLE_ADVANCED_ANALYTICS=${ENABLE_ADVANCED_ANALYTICS:-true}
      - CLUSTERING_ALGORITHM=${CLUSTERING_ALGORITHM:-kmeans}
      - MAX_CLUSTERS=${MAX_CLUSTERS:-10}
      - ENVIRONMENT=production
    volumes:
      # 🗄️ 로그도 호스트 경로에 저장
      - ./data/logs:/app/logs
      # 설정 파일 바인딩
      - ./.env:/app/.env:ro
    restart: unless-stopped
    depends_on:
      chromadb:
        condition: service_healthy
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mcp-network:
    driver: bridge
# 프로덕션에서는 named volume 대신 호스트 바인딩 사용
# volumes: 섹션 제거됨
